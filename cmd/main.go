package main

import (
	"log"
	"net/http"

	"bastienbyra.fr/bastienbyra/ByEmber/internal/config"
	"bastienbyra.fr/bastienbyra/ByEmber/internal/database"
	"bastienbyra.fr/bastienbyra/ByEmber/openapi/autogenerated"
	openapi "bastienbyra.fr/bastienbyra/ByEmber/openapi/server"
	"bastienbyra.fr/bastienbyra/ByEmber/utils"
)

func main() {
	// TODO : WE ONLY USE SQLITE AS OF TODAY, SO WE DON'T CARE FOR NOW, BUT LATER,
	// 		  WE WILL HAVE TO HANDLE THE FACT THE USER MIGHT USE A DIFFERENT DB.

	// Create and run the DB
	sqliteManager := database.NewSQLiteManager()
	db, err := sqliteManager.InitDB()
	if err != nil {
		log.Fatalf("could not init db: %v", err)
	}

	// Create the Encryption service
	encryptionService := utils.NewEncryptionService()

	// Config will be the object that will store all the necessary stuff for the rest
	config := config.NewConfig(db, encryptionService)

	// Run the server
	server := openapi.NewServer(config)
	r := http.NewServeMux()
	h := autogenerated.HandlerFromMux(server, r)
	s := &http.Server{
		Handler: h,
		Addr:    "0.0.0.0:8080",
	}

	log.Fatal(s.ListenAndServe())
}
